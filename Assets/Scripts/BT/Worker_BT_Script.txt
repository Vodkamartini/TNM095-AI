tree("Root")
	fallback	
        while NeedBathroom
            tree "VisitBathroom"		
		while not NeedsEnergy 
			tree "Work"
		sequence
			fallback
				while not isBossNear
					tree "GetCoffe"
				tree "Work"
         
            
			
tree "Work"	
	fallback
		while isWorking
			//Work
			Succeed
		tree "GoToWorkplace"
		

tree "GoToWorkplace"
	sequence
		Move("Workstation")		
		arrived //Check if there
		//Function go to workplace
		//Check if there

tree "GetCoffe"
	sequence
		tree "GoToMachine"	
		mute
			repeat 
				not tree "QueueTree"			
		MoveToUse()
		tree "Drink"

tree "GoToMachine"
	sequence
		Move("Coffee") //Function go to machine
		arrived

tree "Drink"
	sequence
		Wait(600)
		RefillEnergy("Coffee") //Function refill stamina

tree "VisitBathroom"
	sequence
		Move("Toilet")	
		UseBathroom()
		Wait(2.0)
		Move("Sink")
		Wait(2.0)

tree "QueueTree"
	fallback
		sequence
			IsFirstinLine()
			not IsOccupied()
		fallback
			sequence 
				not IsQueueFull()
				sequence
					Queue()
					repeat 
						sequence
							queueing
							mute
								fallback
									sequence
										not IsFirstinLine()								
										mute
											IsNextFree()									
									sequence
										not IsOccupied()
										Stopqueueing()

			sequence
				//move to new findNewSjhit *
				Fail

	