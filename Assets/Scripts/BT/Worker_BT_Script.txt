tree("Root")
	fallback	
    while NeedBathroom
        tree "VisitBathroom"
		while not NeedsEnergy 
			tree "Work"
		sequence
			fallback
				while not isBossNear
					tree "GetCoffe"
				tree "Work"
			
tree "Work" 
        fallback
            parallel
                while IsWorking("Workstation")
                    //Succeed
                        sequence
                            tree "WorkEfficiency"
                            //not Succeed
                        
                tree "GoToWorkplace"



tree "WorkEfficiency"
        tree "CheckCoworker"

tree "CheckCoworker"
	fallback
		sequence 
			GoodMatch()
			WorkEfficiency(2)
		WorkEfficiency(1)
        
tree "GoToWorkplace"
	sequence
		Move("Workstation")		
		mute
			repeat 
				not tree "QueueTree"			
		MoveToUse()
		AssignWorkStation()
		//arrived //Check if there
		//Wait(1000)
		//Function go to workplace
		//Check if there

tree "GetCoffe"
	sequence
		tree "GoToMachine"	
		mute
			repeat 
				not tree "QueueTree"			
		MoveToUse()
		tree "Drink"

tree "GoToMachine"
	sequence
		Move("Coffee") //Function go to machine
		arrived

tree "Drink"
	sequence
		Wait(300)
		RefillEnergy("Coffee") //Function refill stamina

tree "VisitBathroom"
	sequence
		Move("Toilet")
		mute
			repeat 
				not tree "QueueTree"			
		MoveToUse()
		Wait(5.0)
		while NotClean
			tree "WashHands"


tree "WashHands"
    sequence
        Move("Sink")
        Wait(5.0)
        Bathroom()     

tree "QueueTree"
	fallback
		sequence
			//IsFirstinLine()
			not IsOccupied()
			Stopqueueing()
		fallback
			sequence 
				not IsQueueFull()
				sequence
					Queue()
					repeat
						fallback
							sequence
								queueing
								mute
									fallback
										sequence
											not IsFirstinLine()								
											mute
												sequence
													IsNextFree()
													Wait(10)
										sequence
											not IsOccupied()
											Stopqueueing()						

			sequence
				IsQueueFull()
				NeedsNewTarget()
				FindNewTarget()
				Fail
