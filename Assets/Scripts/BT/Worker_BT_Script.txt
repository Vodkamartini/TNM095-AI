tree("Root")
	fallback	
        while NeedBathroom
            tree "VisitBathroom"		
		while not NeedsEnergy 
			tree "Work"
		sequence
			fallback
				while not isBossNear
					tree "GetCoffe"
				tree "Work"
         
            
			
tree "Work"	
	fallback
		while isWorking
			//Work
			Succeed
		tree "GoToWorkplace"
		

tree "GoToWorkplace"
	sequence
		Move("Workstation")		
		mute
			repeat 
				not tree "QueueTree"			
		MoveToUse()
		AssignWorkStation()
		//arrived //Check if there
		//Wait(1000)
		//Function go to workplace
		//Check if there

tree "GetCoffe"
	sequence
		tree "GoToMachine"	
		mute
			repeat 
				not tree "QueueTree"			
		MoveToUse()
		tree "Drink"

tree "GoToMachine"
	sequence
		Move("Coffee") //Function go to machine
		arrived

tree "Drink"
	sequence
		Wait(300)
		RefillEnergy("Coffee") //Function refill stamina

tree "VisitBathroom"
	sequence
		Move("Toilet")
		mute
			repeat 
				not tree "QueueTree"			
		MoveToUse()
		UseBathroom()
		Wait(200)
		Move("Sink")
		Wait(100)

tree "QueueTree"
	fallback
		sequence
			//IsFirstinLine()
			not IsOccupied()
			Stopqueueing()
		fallback
			sequence 
				not IsQueueFull()
				sequence
					Queue()
					repeat
						fallback
							sequence
								queueing
								mute
									fallback
										sequence
											not IsFirstinLine()								
											mute
												sequence
													IsNextFree()
													Wait(10)
										sequence
											not IsOccupied()
											Stopqueueing()						

			sequence
				IsQueueFull()
				NeedsNewTarget()
				FindNewTarget()
				Fail

	